---
title: "Garbage Can Regression Challenge"
format:
  html: default
execute:
  echo: false
  eval: true
---

# Garbage Can Regression Challenge


```{r}
#| echo: false
# Load required packages (install if needed)
if (!require(ggplot2, quietly = TRUE)) {
  install.packages("ggplot2", repos = "https://cran.rstudio.com/")
  library(ggplot2)
}
if (!require(broom, quietly = TRUE)) {
  install.packages("broom", repos = "https://cran.rstudio.com/")
library(broom)
}

# Data with known true relationships: Anxiety = Stress + 0.1 × Time
observDF <- data.frame(
  Stress = c(0,0,0,1,1,1,2,2,2,8,8,8,12,12,12),
  StressSurvey = c(0,0,0,3,3,3,6,6,6,9,9,9,12,12,12),
  Time = c(0,1,1,1,1,1,2,2,2,2,2,2.1,2.2,2.2,2.2),
  Anxiety = c(0,0.1,0.1,1.1,1.1,1.1,2.2,2.2,2.2,8.2,8.2,8.21,12.22,12.22,12.22)
)

observDF
```

## Bivariate Regression Analysis

### Regression of Anxiety on Stress Survey

```{r}
#| echo: false
# Fit the bivariate regression model
model1 <- lm(Anxiety ~ StressSurvey, data = observDF)

# Display the regression results
summary(model1)
```

### Regression Output Interpretation

```{r}
#| echo: false
# Extract key statistics
cat("R-squared:", round(summary(model1)$r.squared, 4), "\n")
cat("Adjusted R-squared:", round(summary(model1)$adj.r.squared, 4), "\n")
cat("F-statistic:", round(summary(model1)$fstatistic[1], 4), "\n")
cat("p-value:", format.pval(pf(summary(model1)$fstatistic[1], 
                               summary(model1)$fstatistic[2], 
                               summary(model1)$fstatistic[3], 
                               lower.tail = FALSE)), "\n")
```


### Reference to Saved Plot

```{r}
#| echo: false
# Check if the plot file exists and display information about it
if (file.exists("anxiety_stress_regression.png")) {
  cat("✓ Plot successfully saved as: anxiety_stress_regression.png\n")
  cat("File size:", round(file.size("anxiety_stress_regression.png") / 1024, 2), "KB\n")
  cat("Full path:", normalizePath("anxiety_stress_regression.png"), "\n")
} else {
  cat("⚠ Plot file not found. Please run the plotting code above first.\n")
}
```

### Estimated Coefficients

```{r}
#| echo: false
# Print the estimated coefficients
cat("Estimated Coefficients:\n")
cat("Intercept (β₀):", round(coef(model1)[1], 4), "\n")
cat("StressSurvey (β₁):", round(coef(model1)[2], 4), "\n")
cat("\nRegression Equation: Anxiety =", round(coef(model1)[1], 4), "+", round(coef(model1)[2], 4), "× StressSurvey\n")
```

### Comparison with True Relationships

```{r}
#| echo: false
# True relationship from the data generation: Anxiety = Stress + 0.1 × Time
# But we're regressing Anxiety on StressSurvey, not Stress

# Extract true coefficients for comparison
true_intercept <- 0  # In the true model: Anxiety = Stress + 0.1 × Time (no intercept)
true_slope_stress <- 1  # True coefficient for Stress in the generating equation

# Get estimated coefficients
est_intercept <- coef(model1)[1]
est_slope_stresssurvey <- coef(model1)[2]

cat("COMPARISON: Estimated vs True Relationships\n")
cat("==========================================\n")
cat("True generating equation: Anxiety = Stress + 0.1 × Time\n")
cat("Estimated equation: Anxiety =", round(est_intercept, 4), "+", round(est_slope_stresssurvey, 4), "× StressSurvey\n\n")

cat("Coefficient Analysis:\n")
cat("--------------------\n")
cat("Intercept:\n")
cat("  True (in generating model): 0\n")
cat("  Estimated:", round(est_intercept, 4), "\n")
cat("  Difference:", round(est_intercept - 0, 4), "\n\n")

cat("Slope coefficient:\n")
cat("  True (Stress coefficient): 1.0\n")
cat("  Estimated (StressSurvey):", round(est_slope_stresssurvey, 4), "\n")
cat("  Difference:", round(est_slope_stresssurvey - 1.0, 4), "\n\n")

cat("Note: We're comparing StressSurvey coefficient to true Stress coefficient\n")
cat("StressSurvey values are 3x larger than Stress values in this dataset\n")
cat("So the estimated coefficient should be approximately 1/3 =", round(1/3, 4), "\n")
cat("Actual ratio:", round(est_slope_stresssurvey, 4), "\n")
```

### Scatter Plot Analysis and Commentary

```{r}
#| echo: false
# Create a detailed scatter plot with additional analysis
par(mfrow = c(1, 2))

# Plot 1: Original scatter plot with regression line
plot(observDF$StressSurvey, observDF$Anxiety, 
     main = "Anxiety vs Stress Survey\nwith Regression Line",
     xlab = "Stress Survey", ylab = "Anxiety",
     pch = 16, col = "blue", cex = 1.2)
abline(model1, col = "red", lwd = 2)

# Add confidence interval
newx <- seq(min(observDF$StressSurvey), max(observDF$StressSurvey), length.out = 100)
pred <- predict(model1, newdata = data.frame(StressSurvey = newx), interval = "confidence")
lines(newx, pred[,2], col = "red", lty = 2)
lines(newx, pred[,3], col = "red", lty = 2)

# Plot 2: Residuals plot to check assumptions
residuals <- resid(model1)
plot(observDF$StressSurvey, residuals,
     main = "Residuals vs Stress Survey\n(Checking Linearity)",
     xlab = "Stress Survey", ylab = "Residuals",
     pch = 16, col = "darkgreen", cex = 1.2)
abline(h = 0, col = "red", lwd = 2)

# Reset plotting parameters
par(mfrow = c(1, 1))

# Save the main scatter plot
png("anxiety_stress_regression.png", width = 800, height = 600, res = 100)
plot(observDF$StressSurvey, observDF$Anxiety, 
     main = "Bivariate Regression: Anxiety vs Stress Survey",
     xlab = "Stress Survey", ylab = "Anxiety",
     pch = 16, col = "blue", cex = 1.2)
abline(model1, col = "red", lwd = 2)
lines(newx, pred[,2], col = "red", lty = 2)
lines(newx, pred[,3], col = "red", lty = 2)
dev.off()
```

### Fit Assessment and Commentary

```{r}
#| echo: false
# Detailed analysis of the regression fit
cat("REGRESSION FIT ANALYSIS:\n")
cat("========================\n\n")

# R-squared and adjusted R-squared
r_squared <- summary(model1)$r.squared
adj_r_squared <- summary(model1)$adj.r.squared

cat("1. GOODNESS OF FIT:\n")
cat("   R-squared:", round(r_squared, 4), "(", round(r_squared*100, 1), "% of variance explained)\n")
cat("   Adjusted R-squared:", round(adj_r_squared, 4), "\n")

if (r_squared > 0.8) {
  cat("   ✓ Excellent fit - model explains most of the variance\n")
} else if (r_squared > 0.6) {
  cat("   ✓ Good fit - model explains substantial variance\n")
} else if (r_squared > 0.4) {
  cat("   ⚠ Moderate fit - model explains some variance\n")
} else {
  cat("   ⚠ Poor fit - model explains little variance\n")
}

# Statistical significance
f_stat <- summary(model1)$fstatistic[1]
f_pvalue <- pf(f_stat, summary(model1)$fstatistic[2], summary(model1)$fstatistic[3], lower.tail = FALSE)

cat("\n2. STATISTICAL SIGNIFICANCE:\n")
cat("   F-statistic:", round(f_stat, 4), "\n")
cat("   p-value:", format.pval(f_pvalue), "\n")

if (f_pvalue < 0.001) {
  cat("   ✓ Highly significant relationship (p < 0.001)\n")
} else if (f_pvalue < 0.01) {
  cat("   ✓ Very significant relationship (p < 0.01)\n")
} else if (f_pvalue < 0.05) {
  cat("   ✓ Significant relationship (p < 0.05)\n")
} else {
  cat("   ⚠ Relationship not statistically significant (p ≥ 0.05)\n")
}

# Coefficient significance
coef_pvalue <- summary(model1)$coefficients[2, 4]
cat("\n3. COEFFICIENT SIGNIFICANCE:\n")
cat("   StressSurvey coefficient p-value:", format.pval(coef_pvalue), "\n")

if (coef_pvalue < 0.05) {
  cat("   ✓ StressSurvey coefficient is statistically significant\n")
} else {
  cat("   ⚠ StressSurvey coefficient is not statistically significant\n")
}

# Potential issues
cat("\n4. POTENTIAL ISSUES:\n")
cat("   • Omitted variable bias: Time variable is missing from the model\n")
cat("   • Variable scaling: Using StressSurvey instead of true Stress variable\n")
cat("   • Small sample size: Only", nrow(observDF), "observations\n")
cat("   • Perfect linear relationship: Data appears artificially generated\n")

# Residual analysis
residuals <- resid(model1)
cat("\n5. RESIDUAL ANALYSIS:\n")
cat("   Mean of residuals:", round(mean(residuals), 6), "(should be ~0)\n")
cat("   Standard deviation of residuals:", round(sd(residuals), 4), "\n")

# Check for patterns in residuals
if (abs(mean(residuals)) < 0.001) {
  cat("   ✓ Residuals centered around zero\n")
} else {
  cat("   ⚠ Residuals not centered around zero\n")
}
```

## Question 3: Bivariate Regression of Anxiety on Time

### Regression of Anxiety on Time

```{r}
#| echo: false
# Fit the bivariate regression model: Anxiety ~ Time
model2 <- lm(Anxiety ~ Time, data = observDF)

# Display the regression results
summary(model2)
```

### Estimated Coefficients for Time Model

```{r}
#| echo: false
# Print the estimated coefficients for the Time model
cat("Estimated Coefficients (Anxiety ~ Time):\n")
cat("======================================\n")
cat("Intercept (β₀):", round(coef(model2)[1], 4), "\n")
cat("Time (β₁):", round(coef(model2)[2], 4), "\n")
cat("\nRegression Equation: Anxiety =", round(coef(model2)[1], 4), "+", round(coef(model2)[2], 4), "× Time\n")
```

### Comparison with True Relationship

```{r}
#| echo: false
# Compare estimated coefficients with true relationship
cat("COMPARISON: Estimated vs True Relationships (Time Model)\n")
cat("=======================================================\n")
cat("True generating equation: Anxiety = Stress + 0.1 × Time\n")
cat("Estimated equation: Anxiety =", round(coef(model2)[1], 4), "+", round(coef(model2)[2], 4), "× Time\n\n")

# True coefficients
true_intercept_time <- 0  # In true model: Anxiety = Stress + 0.1 × Time (no intercept)
true_slope_time <- 0.1    # True coefficient for Time

# Estimated coefficients
est_intercept_time <- coef(model2)[1]
est_slope_time <- coef(model2)[2]

cat("Coefficient Analysis:\n")
cat("--------------------\n")
cat("Intercept:\n")
cat("  True (in generating model): 0\n")
cat("  Estimated:", round(est_intercept_time, 4), "\n")
cat("  Difference:", round(est_intercept_time - 0, 4), "\n\n")

cat("Time coefficient:\n")
cat("  True: 0.1\n")
cat("  Estimated:", round(est_slope_time, 4), "\n")
cat("  Difference:", round(est_slope_time - 0.1, 4), "\n\n")

# Model fit comparison
r_squared_time <- summary(model2)$r.squared
cat("Model Fit:\n")
cat("  R-squared:", round(r_squared_time, 4), "(", round(r_squared_time*100, 1), "% of variance explained)\n")

# Note about omitted variable bias
cat("\nIMPORTANT NOTE:\n")
cat("This model omits the Stress variable, which is a major component\n")
cat("of the true relationship. This creates omitted variable bias.\n")
cat("The Time coefficient may be biased because Stress and Time are\n")
cat("correlated in the data generation process.\n")
```

### Scatter Plot: Anxiety vs Time

```{r}
#| echo: false
# Create scatter plot for Anxiety vs Time
plot(observDF$Time, observDF$Anxiety, 
     main = "Anxiety vs Time\nwith Regression Line",
     xlab = "Time", ylab = "Anxiety",
     pch = 16, col = "purple", cex = 1.2)
abline(model2, col = "red", lwd = 2)

# Add confidence interval
newx_time <- seq(min(observDF$Time), max(observDF$Time), length.out = 100)
pred_time <- predict(model2, newdata = data.frame(Time = newx_time), interval = "confidence")
lines(newx_time, pred_time[,2], col = "red", lty = 2)
lines(newx_time, pred_time[,3], col = "red", lty = 2)

# Save the plot
png("anxiety_time_regression.png", width = 800, height = 600, res = 100)
plot(observDF$Time, observDF$Anxiety, 
     main = "Bivariate Regression: Anxiety vs Time",
     xlab = "Time", ylab = "Anxiety",
     pch = 16, col = "purple", cex = 1.2)
abline(model2, col = "red", lwd = 2)
lines(newx_time, pred_time[,2], col = "red", lty = 2)
lines(newx_time, pred_time[,3], col = "red", lty = 2)
dev.off()
```

### Time Model Fit Assessment and Commentary

```{r}
#| echo: false
# Detailed analysis of the Time regression fit
cat("TIME MODEL FIT ANALYSIS:\n")
cat("========================\n\n")

# R-squared and adjusted R-squared
r_squared_time <- summary(model2)$r.squared
adj_r_squared_time <- summary(model2)$adj.r.squared

cat("1. GOODNESS OF FIT:\n")
cat("   R-squared:", round(r_squared_time, 4), "(", round(r_squared_time*100, 1), "% of variance explained)\n")
cat("   Adjusted R-squared:", round(adj_r_squared_time, 4), "\n")

if (r_squared_time > 0.8) {
  cat("   ✓ Excellent fit - model explains most of the variance\n")
} else if (r_squared_time > 0.6) {
  cat("   ✓ Good fit - model explains substantial variance\n")
} else if (r_squared_time > 0.4) {
  cat("   ⚠ Moderate fit - model explains some variance\n")
} else {
  cat("   ⚠ Poor fit - model explains little variance\n")
}

# Statistical significance
f_stat_time <- summary(model2)$fstatistic[1]
f_pvalue_time <- pf(f_stat_time, summary(model2)$fstatistic[2], summary(model2)$fstatistic[3], lower.tail = FALSE)

cat("\n2. STATISTICAL SIGNIFICANCE:\n")
cat("   F-statistic:", round(f_stat_time, 4), "\n")
cat("   p-value:", format.pval(f_pvalue_time), "\n")

if (f_pvalue_time < 0.001) {
  cat("   ✓ Highly significant relationship (p < 0.001)\n")
} else if (f_pvalue_time < 0.01) {
  cat("   ✓ Very significant relationship (p < 0.01)\n")
} else if (f_pvalue_time < 0.05) {
  cat("   ✓ Significant relationship (p < 0.05)\n")
} else {
  cat("   ⚠ Relationship not statistically significant (p ≥ 0.05)\n")
}

# Coefficient significance
coef_pvalue_time <- summary(model2)$coefficients[2, 4]
cat("\n3. COEFFICIENT SIGNIFICANCE:\n")
cat("   Time coefficient p-value:", format.pval(coef_pvalue_time), "\n")

if (coef_pvalue_time < 0.05) {
  cat("   ✓ Time coefficient is statistically significant\n")
} else {
  cat("   ⚠ Time coefficient is not statistically significant\n")
}

# Compare with StressSurvey model
cat("\n4. COMPARISON WITH STRESS SURVEY MODEL:\n")
r_squared_stress <- summary(model1)$r.squared
cat("   StressSurvey model R-squared:", round(r_squared_stress, 4), "\n")
cat("   Time model R-squared:", round(r_squared_time, 4), "\n")

if (r_squared_stress > r_squared_time) {
  cat("   → StressSurvey explains more variance than Time alone\n")
} else {
  cat("   → Time explains more variance than StressSurvey alone\n")
}

# Potential issues
cat("\n5. POTENTIAL ISSUES:\n")
cat("   • OMITTED VARIABLE BIAS: Major issue - Stress variable is missing\n")
cat("   • True relationship: Anxiety = Stress + 0.1 × Time\n")
cat("   • This model only uses Time, ignoring the dominant Stress effect\n")
cat("   • Time coefficient may be biased due to correlation with omitted Stress\n")
cat("   • Small sample size: Only", nrow(observDF), "observations\n")
cat("   • Limited Time variation: Time values range from", round(min(observDF$Time), 1), "to", round(max(observDF$Time), 1), "\n")

# Residual analysis
residuals_time <- resid(model2)
cat("\n6. RESIDUAL ANALYSIS:\n")
cat("   Mean of residuals:", round(mean(residuals_time), 6), "(should be ~0)\n")
cat("   Standard deviation of residuals:", round(sd(residuals_time), 4), "\n")

# Check for patterns in residuals
if (abs(mean(residuals_time)) < 0.001) {
  cat("   ✓ Residuals centered around zero\n")
} else {
  cat("   ⚠ Residuals not centered around zero\n")
}

# True vs estimated coefficient comparison
true_time_coef <- 0.1
est_time_coef <- coef(model2)[2]
cat("\n7. COEFFICIENT ACCURACY:\n")
cat("   True Time coefficient: 0.1\n")
cat("   Estimated Time coefficient:", round(est_time_coef, 4), "\n")
cat("   Bias:", round(est_time_coef - true_time_coef, 4), "\n")

if (abs(est_time_coef - true_time_coef) < 0.01) {
  cat("   ✓ Coefficient estimate is very close to true value\n")
} else if (abs(est_time_coef - true_time_coef) < 0.05) {
  cat("   ⚠ Coefficient estimate is somewhat biased\n")
} else {
  cat("   ⚠ Coefficient estimate is significantly biased\n")
}
```

## Question 5: Multiple Regression of Anxiety on StressSurvey and Time

### Multiple Regression Model

```{r}
#| echo: false
# Fit the multiple regression model: Anxiety ~ StressSurvey + Time
model3 <- lm(Anxiety ~ StressSurvey + Time, data = observDF)

# Display the regression results
summary(model3)
```

### Estimated Coefficients for Multiple Regression

```{r}
#| echo: false
# Print the estimated coefficients for the multiple regression model
cat("Estimated Coefficients (Anxiety ~ StressSurvey + Time):\n")
cat("=====================================================\n")
cat("Intercept (β₀):", round(coef(model3)[1], 4), "\n")
cat("StressSurvey (β₁):", round(coef(model3)[2], 4), "\n")
cat("Time (β₂):", round(coef(model3)[3], 4), "\n")
cat("\nRegression Equation: Anxiety =", round(coef(model3)[1], 4), "+", round(coef(model3)[2], 4), "× StressSurvey +", round(coef(model3)[3], 4), "× Time\n")
```

### Comparison with True Relationship

```{r}
#| echo: false
# Compare estimated coefficients with true relationship
cat("COMPARISON: Estimated vs True Relationships (Multiple Regression)\n")
cat("================================================================\n")
cat("True generating equation: Anxiety = Stress + 0.1 × Time\n")
cat("Estimated equation: Anxiety =", round(coef(model3)[1], 4), "+", round(coef(model3)[2], 4), "× StressSurvey +", round(coef(model3)[3], 4), "× Time\n\n")

# True coefficients (remember StressSurvey = 3 × Stress)
true_intercept_multiple <- 0  # In true model: Anxiety = Stress + 0.1 × Time (no intercept)
true_slope_stress_multiple <- 1  # True coefficient for Stress
true_slope_time_multiple <- 0.1  # True coefficient for Time
expected_stresssurvey_coef <- 1/3  # Since StressSurvey = 3 × Stress

# Estimated coefficients
est_intercept_multiple <- coef(model3)[1]
est_slope_stresssurvey_multiple <- coef(model3)[2]
est_slope_time_multiple <- coef(model3)[3]

cat("Coefficient Analysis:\n")
cat("--------------------\n")
cat("Intercept:\n")
cat("  True (in generating model): 0\n")
cat("  Estimated:", round(est_intercept_multiple, 4), "\n")
cat("  Difference:", round(est_intercept_multiple - 0, 4), "\n\n")

cat("StressSurvey coefficient:\n")
cat("  Expected (1/3 of true Stress coefficient):", round(expected_stresssurvey_coef, 4), "\n")
cat("  Estimated:", round(est_slope_stresssurvey_multiple, 4), "\n")
cat("  Difference from expected:", round(est_slope_stresssurvey_multiple - expected_stresssurvey_coef, 4), "\n\n")

cat("Time coefficient:\n")
cat("  True: 0.1\n")
cat("  Estimated:", round(est_slope_time_multiple, 4), "\n")
cat("  Difference:", round(est_slope_time_multiple - 0.1, 4), "\n\n")

# Model fit comparison
r_squared_multiple <- summary(model3)$r.squared
cat("Model Fit:\n")
cat("  R-squared:", round(r_squared_multiple, 4), "(", round(r_squared_multiple*100, 1), "% of variance explained)\n")

# Compare with single variable models
r_squared_stress <- summary(model1)$r.squared
r_squared_time <- summary(model2)$r.squared

cat("\nModel Comparison:\n")
cat("  StressSurvey only R-squared:", round(r_squared_stress, 4), "\n")
cat("  Time only R-squared:", round(r_squared_time, 4), "\n")
cat("  Multiple regression R-squared:", round(r_squared_multiple, 4), "\n")

if (r_squared_multiple > max(r_squared_stress, r_squared_time)) {
  cat("  ✓ Multiple regression explains more variance than either single variable model\n")
} else {
  cat("  ⚠ Multiple regression does not improve over single variable models\n")
}
```

### Multiple Regression Fit Assessment

```{r}
#| echo: false
# Detailed analysis of the multiple regression fit
cat("MULTIPLE REGRESSION FIT ANALYSIS:\n")
cat("================================\n\n")

# R-squared and adjusted R-squared
adj_r_squared_multiple <- summary(model3)$adj.r.squared

cat("1. GOODNESS OF FIT:\n")
cat("   R-squared:", round(r_squared_multiple, 4), "(", round(r_squared_multiple*100, 1), "% of variance explained)\n")
cat("   Adjusted R-squared:", round(adj_r_squared_multiple, 4), "\n")

if (r_squared_multiple > 0.95) {
  cat("   ✓ Excellent fit - model explains almost all variance\n")
} else if (r_squared_multiple > 0.8) {
  cat("   ✓ Very good fit - model explains most of the variance\n")
} else if (r_squared_multiple > 0.6) {
  cat("   ✓ Good fit - model explains substantial variance\n")
} else {
  cat("   ⚠ Moderate fit - model explains some variance\n")
}

# Statistical significance
f_stat_multiple <- summary(model3)$fstatistic[1]
f_pvalue_multiple <- pf(f_stat_multiple, summary(model3)$fstatistic[2], summary(model3)$fstatistic[3], lower.tail = FALSE)

cat("\n2. OVERALL MODEL SIGNIFICANCE:\n")
cat("   F-statistic:", round(f_stat_multiple, 4), "\n")
cat("   p-value:", format.pval(f_pvalue_multiple), "\n")

if (f_pvalue_multiple < 0.001) {
  cat("   ✓ Highly significant overall model (p < 0.001)\n")
} else if (f_pvalue_multiple < 0.01) {
  cat("   ✓ Very significant overall model (p < 0.01)\n")
} else if (f_pvalue_multiple < 0.05) {
  cat("   ✓ Significant overall model (p < 0.05)\n")
} else {
  cat("   ⚠ Overall model not statistically significant (p ≥ 0.05)\n")
}

# Individual coefficient significance
stress_pvalue <- summary(model3)$coefficients[2, 4]
time_pvalue <- summary(model3)$coefficients[3, 4]

cat("\n3. INDIVIDUAL COEFFICIENT SIGNIFICANCE:\n")
cat("   StressSurvey coefficient p-value:", format.pval(stress_pvalue), "\n")
cat("   Time coefficient p-value:", format.pval(time_pvalue), "\n")

if (stress_pvalue < 0.05) {
  cat("   ✓ StressSurvey coefficient is statistically significant\n")
} else {
  cat("   ⚠ StressSurvey coefficient is not statistically significant\n")
}

if (time_pvalue < 0.05) {
  cat("   ✓ Time coefficient is statistically significant\n")
} else {
  cat("   ⚠ Time coefficient is not statistically significant\n")
}

# Coefficient accuracy assessment
cat("\n4. COEFFICIENT ACCURACY:\n")
stress_bias <- est_slope_stresssurvey_multiple - expected_stresssurvey_coef
time_bias <- est_slope_time_multiple - 0.1

cat("   StressSurvey coefficient bias:", round(stress_bias, 4), "\n")
cat("   Time coefficient bias:", round(time_bias, 4), "\n")

if (abs(stress_bias) < 0.01 && abs(time_bias) < 0.01) {
  cat("   ✓ Both coefficients are very close to expected values\n")
} else if (abs(stress_bias) < 0.05 && abs(time_bias) < 0.05) {
  cat("   ✓ Both coefficients are reasonably close to expected values\n")
} else {
  cat("   ⚠ Some coefficients show significant bias\n")
}

# Key insights
cat("\n5. KEY INSIGHTS:\n")
cat("   • This model includes both variables from the true relationship\n")
cat("   • StressSurvey captures the main Stress effect (scaled by 1/3)\n")
cat("   • Time coefficient should be close to the true 0.1 value\n")
cat("   • This is the most complete model given the available variables\n")
```

